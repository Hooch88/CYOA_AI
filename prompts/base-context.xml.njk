<template>
    <description>This is a base context prompt, designed to provide all necessary information for event checking, plausibility checking, and writing prose in an RPG scene. The type of prompt is sent as a variable and then included from _includes via if/else statements.</description>
    <systemPrompt>
You are an AI designed to perform various tasks related to managing a text-based RPG. You will be provided with the current world setting, location description, player information, NPCs present, and items in the scene. Your tasks may include checking for specific events, determining the plausibility of player actions, and generating narrative responses to player actions. Always consider the context provided to ensure your responses are relevant and immersive.
    </systemPrompt>
    <generationPrompt>
<context>
  <setting>{{ setting }}</setting>
  <gameHistory>{{ gameHistory }}</gameHistory>
  <currentLocation>
    <name>{{ currentLocation.name }}</name>
    <description>{{ currentLocation.description }}</description>
    <statusEffects>
      {% for effect in currentLocation.statusEffects %}
      <effect>
        <description>{{ effect.description }}</description>
        <duration>{{ effect.duration | default('unknown') }}</duration>
      </effect>
      {% endfor %}
    </statusEffects>
  </currentLocation>
  <player>
    <name>{{ currentPlayer.name }}</name>
    <description>{{ currentPlayer.description }}</description>
    <health>{{ currentPlayer.health }}</health>
    <maxHealth>{{ currentPlayer.maxHealth }}</maxHealth>
    <statusEffects>
      {% for effect in currentPlayer.statusEffects %}
      <effect>
        <description>{{ effect.description }}</description>
        <duration>{{ effect.duration | default('unknown') }}</duration>
      </effect>
      {% endfor %}
    </statusEffects>
  </player>
  <npcs>
    {% for npc in npcs %}
    <npc>
      <name>{{ npc.name }}</name>
      <description>{{ npc.description }}</description>
      <statusEffects>
        {% for effect in npc.statusEffects %}
        <effect>
          <description>{{ effect.description }}</description>
          <duration>{{ effect.duration | default('unknown') }}</duration>
        </effect>
        {% endfor %}
      </statusEffects>
    </npc>
    {% endfor %}
  </npcs>
  <playerParty>
    {% for member in party %}
    <member>
      <name>{{ member.name }}</name>
      <description>{{ member.description }}</description>
      <statusEffects>
        {% for effect in member.statusEffects %}
        <effect>
          <description>{{ effect.description }}</description>
          <duration>{{ effect.duration | default('unknown') }}</duration>
        </effect>
        {% endfor %}
      </statusEffects>
    </member>
    {% endfor %}
  </playerParty>
  <itemsInScene>
    {% for item in itemsInScene %}
    <item>
      <name>{{ item.name }}</name>
      <description>{{ item.description }}</description>
      <statusEffects>
        {% for effect in item.statusEffects %}
        <effect>
          <description>{{ effect.description }}</description>
          <duration>{{ effect.duration | default('unknown') }}</duration>
        </effect>
        {% endfor %}
      </statusEffects>
    </item>
    {% endfor %}
  </itemsInScene>
</context>

{% if promptType == "event-checks" %}
{% include '_includes/event-checks.njk' %}
{% elif promptType == "plausibility-check" %}
{% include '_includes/plausibility-check.njk' %}
{% elif promptType == "player-action" %}
{% include '_includes/player-action.njk' %}
{% endif %}

</generationPrompt>

</template>
    
